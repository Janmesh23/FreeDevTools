---
import { getClusters, getIconsByCluster } from 'db/svg_icons/svg-icons-utils';
import BaseLayout from '../../layouts/BaseLayout.astro';
import SvgIcons from './_SvgIcons.astro';

// Generate static paths for paginated routes
export async function getStaticPaths() {
  const clusters = getClusters();

  // Get all categories with their data
  const categories = clusters.map((cluster) => {
    const icons = getIconsByCluster(cluster.source_folder || cluster.name);

    return {
      id: cluster.source_folder || cluster.name,
      name: cluster.name,
      description: cluster.description,
      icon: `/freedevtools/svg_icons/${cluster.name}/`,
      iconCount: icons.length,
      url: `/freedevtools/svg_icons/${cluster.name}/`,
      keywords: cluster.keywords,
      features: cluster.features,
      fileNames: icons.map((icon) => icon.name),
    };
  });

  const itemsPerPage = 30;
  const totalPages = Math.ceil(categories.length / itemsPerPage);
  const paths: any[] = [];

  // Generate pagination pages (2, 3, 4, etc. - page 1 is handled by index.astro)
  for (let i = 2; i <= totalPages; i++) {
    paths.push({
      params: { page: i.toString() },
      props: {
        type: 'pagination',
        page: i,
        itemsPerPage,
        totalPages,
        categories,
      },
    });
  }

  return paths;
}

const { type, page, itemsPerPage, totalPages, categories } = Astro.props;

// Redirect /svg_icons/1 to /svg_icons
if (type === 'pagination' && page === 1) {
  return Astro.redirect('/freedevtools/svg_icons/');
}

const currentPage = page;
const totalCategories = categories.length;

// Calculate total SVG icons across all categories
const totalSvgIcons = categories.reduce(
  (total: number, category: any) => total + category.iconCount,
  0
);

// Get categories for current page
const startIndex = (currentPage - 1) * itemsPerPage;
const endIndex = startIndex + itemsPerPage;
const currentPageCategories = categories.slice(startIndex, endIndex);

// Breadcrumb data
const breadcrumbItems = [
  { label: 'Free DevTools', href: '/freedevtools/' },
  { label: 'SVG Icons', href: '/freedevtools/svg_icons/' },
  { label: `Page ${currentPage}` },
];

// SEO data
const seoTitle = `Free SVG Icons - Page ${currentPage} | Online Free DevTools by Hexmos`;
const seoDescription = `Browse page ${currentPage} of ${totalPages} pages in our free SVG icons collection. Download thousands of vector graphics instantly. No registration required.`;
const canonical = `https://hexmos.com/freedevtools/svg_icons/${currentPage}/`;

// Enhanced keywords for paginated content
const paginatedKeywords = [
  'svg icons',
  'vector graphics',
  'free icons',
  'download icons',
  'edit icons',
  `page ${currentPage}`,
  'pagination',
  'icon collection',
  'vector graphics library',
];
---

<BaseLayout
  name="SVG Icons"
  path={`/freedevtools/svg_icons/${currentPage}/`}
  title={seoTitle}
  description={seoDescription}
  canonical={canonical}
  showHeader={true}
  totalItems={totalCategories}
  itemsPerPage={itemsPerPage}
  currentPage={currentPage}
  category="SVG Icons"
  partOf="Free DevTools"
  partOfUrl="https://hexmos.com/freedevtools/"
  keywords={paginatedKeywords}
  features={[
    'Download',
    'Edit colors',
    'Add backgrounds',
    'Customize',
    'No registration',
  ]}
>
  <SvgIcons
    categories={currentPageCategories}
    currentPage={currentPage}
    totalPages={totalPages}
    totalCategories={totalCategories}
    totalSvgIcons={totalSvgIcons}
    breadcrumbItems={breadcrumbItems}
  />
</BaseLayout>
