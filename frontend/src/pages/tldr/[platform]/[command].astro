---
import { getCollection, render, type CollectionEntry } from 'astro:content';
import AdBanner from '../../../components/banner/AdBanner.astro';
import CreditsButton from '../../../components/buttons/CreditsButton';
import ToolContainer from '../../../components/tool/ToolContainer';
import ToolHead from '../../../components/tool/ToolHead';
import BaseLayout from '../../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const tldrEntries = await getCollection('tldr');
  const paths: Array<{ params: { platform: string; command: string } }> = [];

  for (const entry of tldrEntries) {
    // Extract platform and command from the id (which is the file path)
    const pathParts = entry.id.split('/');
    const platform = pathParts[pathParts.length - 2];
    const fileName = pathParts[pathParts.length - 1];
    const command = fileName.replace('.md', '');

    paths.push({
      params: { platform, command },
    });
  }

  return paths;
}

const { platform, command } = Astro.params;

// Find the entry by platform and command
const tldrEntries: CollectionEntry<'tldr'>[] = await getCollection('tldr');
const entry = tldrEntries.find((entry) => {
  const pathParts = entry.id.split('/');
  const entryPlatform = pathParts[pathParts.length - 2];
  const fileName = pathParts[pathParts.length - 1];
  const entryCommand = fileName.replace('.md', '');
  return entryPlatform === platform && entryCommand === command;
});

if (!entry) {
  return Astro.redirect('/404');
}

const { Content } = await render(entry);
const title = entry.data.title || command;
const description =
  entry.data.description || `Documentation for ${command} command`;

// Breadcrumb items
const breadcrumbItems = [
  { label: 'Free DevTools', href: '/freedevtools/' },
  { label: 'TLDR', href: '/freedevtools/tldr/' },
  { label: platform, href: `/freedevtools/tldr/${platform}/` },
  { label: command },
];
---

<BaseLayout
  name={title}
  path={`/tldr/${platform}/${command}/`}
  title={`${title} - ${platform} Commands - TLDR | Online Free DevTools by Hexmos`}
  description={description}
  canonical={`https://hexmos.com/freedevtools/tldr/${platform}/${command}/`}
  showHeader={true}
>
  <style>
    :global(.prose h1) {
      display: none !important;
    }
  </style>
  <ToolContainer>
    <div class="mb-16 mt-[74px]">
      <AdBanner />
    </div>
    <ToolHead
      name={title}
      description={description}
      breadcrumbItems={breadcrumbItems}
    />

    <div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-6 mt-6">
      <div
        class="prose prose-slate dark:prose-invert max-w-none prose-headings:text-slate-900 dark:prose-headings:text-slate-100 prose-p:text-slate-700 dark:prose-p:text-slate-300 prose-code:text-blue-600 dark:prose-code:text-blue-400 prose-code:bg-slate-100 dark:prose-code:bg-slate-700 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-pre:bg-slate-100 dark:prose-pre:bg-slate-800 prose-pre:border prose-pre:border-slate-200 dark:prose-pre:border-slate-600 prose-blockquote:border-l-blue-500 prose-blockquote:bg-slate-100 dark:prose-blockquote:bg-slate-700 prose-blockquote:px-4 prose-blockquote:py-2 prose-blockquote:rounded prose-ul:space-y-1 prose-li:text-slate-700 dark:prose-li:text-slate-300"
      >
        <Content />
      </div>
    </div>
    {
      Array.isArray(entry.data.relatedTools) &&
        entry.data.relatedTools.length > 0 && (
          <section class="mt-10">
            <h2 class="text-lg font-semibold mb-4 text-slate-900 dark:text-slate-100">
              Related Free Online Tools
            </h2>
            <ul class="flex flex-wrap gap-3">
              {entry.data.relatedTools.map((tool) => (
                <li>
                  <a
                    href={tool.url}
                    class="inline-block px-4 py-2 rounded-lg bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300 hover:bg-blue-100 dark:hover:bg-blue-900/40 font-medium transition-colors"
                    target={tool.url.startsWith('http') ? '_blank' : undefined}
                    rel={
                      tool.url.startsWith('http')
                        ? 'noopener noreferrer'
                        : undefined
                    }
                  >
                    {tool.banner && (
                      <img
                        src={tool.banner}
                        alt={`${tool.name} banner`}
                        class="mb-2 w-full max-w-xs rounded"
                        loading="lazy"
                      />
                    )}
                    {tool.name}
                  </a>
                </li>
              ))}
            </ul>
          </section>
        )
    }

    <!-- Navigation buttons -->
    <div class="mt-10 pt-6 mb-8 border-t border-slate-200 dark:border-slate-700">
      <div class="flex flex-wrap gap-4">
        <a
          href={`/freedevtools/tldr/${platform}/`}
          class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors"
        >
          ‚Üê Back to {platform} commands
        </a>
        <a
          href="/freedevtools/tldr/"
          class="inline-flex items-center px-4 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-slate-50 dark:bg-slate-800 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors"
        >
          tldr
        </a>
        <CreditsButton href="/freedevtools/tldr/credits/" />
      </div>
    </div>
  </ToolContainer>
</BaseLayout>
