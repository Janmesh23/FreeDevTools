---
import { formatNumber } from '@/lib/utils';
import AdBanner from '../../components/banner/AdBanner.astro';
import CreditsButton from '../../components/buttons/CreditsButton';
import ToolContainer from '../../components/tool/ToolContainer';
import ToolContentCardWrapper from '../../components/tool/ToolContentCardWrapper';
import ToolHead from '../../components/tool/ToolHead';
import { Badge } from '../../components/ui/badge';
import { Card } from '../../components/ui/card';

// Helper function to convert category icons to emojis
const getCategoryEmoji = (icon: string): string => {
  const iconMap: Record<string, string> = {
    // Direct category ID mappings
    aggregators: 'üîß',
    'apis-and-http-requests': 'üåê',
    'art--culture': 'üé®',
    'blockchain-and-crypto': '‚Çø',
    'browser-automation': 'üåê',
    'business-tools': 'üíº',
    'cloud-platforms': '‚òÅÔ∏è',
    'cloud-services': '‚òÅÔ∏è',
    'coding-agents': 'üíª',
    'command-line': 'üíª',
    communication: 'üí¨',
    'community-servers': 'üë•',
    'content-creation': 'üé®',
    'crm-and-sales-tools': 'üíº',
    'customer-data-platforms': 'üìä',
    'data-analytics': 'üìä',
    'data-labeling-and-annotation': 'üè∑Ô∏è',
    'data-platforms': 'üóÑÔ∏è',
    'data-science-tools': 'üìä',
    databases: 'üóÑÔ∏è',
    'developer-tools': 'üîß',
    'devops-and-ci-cd': '‚öôÔ∏è',
    'digital-marketing': 'üìà',
    'document-processing': 'üìÑ',
    'e-commerce-and-retail': 'üõí',
    'education-and-learning': 'üìö',
    'email-and-messaging': 'üìß',
    'embedded-system': 'üîå',
    'file-conversion': 'üîÑ',
    'file-management': 'üìÅ',

    // Legacy icon mappings for backward compatibility
    pickaxe: '‚õèÔ∏è',
    code: 'üíª',
    brain: 'üß†',
    shield: 'üõ°Ô∏è',
    bitcoin: '‚Çø',
    browser: 'üåê',
    cloud: '‚òÅÔ∏è',
    message: 'üí¨',
    palette: 'üé®',
    database: 'üóÑÔ∏è',
    terminal: 'üíª',
    users: 'üë•',
    star: '‚≠ê',
    tool: 'üîß',
  };

  // Normalize the input: convert to lowercase
  const normalizedIcon = icon.toLowerCase().trim();

  // Try exact match first
  if (iconMap[normalizedIcon]) {
    return iconMap[normalizedIcon];
  }

  // Try substring matching - if any key from iconMap is found in the input
  for (const [key, emoji] of Object.entries(iconMap)) {
    if (normalizedIcon.includes(key.toLowerCase())) {
      return emoji;
    }
  }

  return 'üîß';
};

// Helper function to get category description with fallback
const getCategoryDescription = (
  description: string,
  categoryName: string
): string => {
  if (description && description.trim() !== '') {
    return description;
  }
  return `Explore MCP repositories in the ${categoryName} category`;
};

const {
  serversCount,
  toolsCount,
  clientsCount,
  categoriesCount,
  categories,
  breadcrumbItems,
  currentPage = 1,
  lastPage = 1,
  totalPages = 1,
  pageUrl,
} = Astro.props;
---

<ToolContainer>
  <div class="mb-16 mt-[74px]">
    <AdBanner />
  </div>
  <ToolHead
    name="MCP Directory"
    description={`Browse ${formatNumber(serversCount)}+ MCP repositories instantly with our comprehensive directory. Find Model Context Protocol servers, tools, and clients by category. Free, no registration required.`}
    breadcrumbItems={breadcrumbItems}
  />

  {/* Overview Stats */}
  <div id="pagination-info" class="text-center">
    <div class="grid grid-cols-2 gap-6 mt-8">
      <div class="text-center">
        <div class="text-3xl font-bold text-orange-600">{categoriesCount}</div>
        <div class="text-sm text-gray-600 dark:text-gray-400">Categories</div>
      </div>
      <div class="text-center">
        <div class="text-3xl font-bold text-green-600">
          {formatNumber(serversCount)}
        </div>
        <div class="text-sm text-gray-600 dark:text-gray-400">
          MCP Repositories
        </div>
      </div>
    </div>
  </div>

  {/* Pagination Info */}
  <div class="bg-slate-50 dark:bg-slate-800 rounded-lg p-4 mb-6 mt-8">
    <div class="text-sm text-slate-600 dark:text-slate-400 text-center">
      Showing {categories.length} of {categoriesCount} categories (Page {
        currentPage
      } of {lastPage})
    </div>
  </div>

  {/* Categories Grid */}
  <div class="mt-10 mb-6">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {
        categories.map((category: any) => (
          <a
            href={category.url}
            class="block p-6 bg-white dark:bg-slate-900 border border-slate-200 dark:border-transparent rounded-lg text-inherit no-underline transition-all duration-300 ease-in-out hover:shadow-md hover:-translate-y-1"
          >
            <div class="text-center space-y-3">
              <div class="text-4xl mb-3">{getCategoryEmoji(category.icon)}</div>
              <h4 class="font-semibold text-lg text-gray-900 dark:text-gray-100 line-clamp-2">
                {category.name}
              </h4>
              <p class="text-sm text-gray-600 dark:text-gray-400 line-clamp-3">
                {getCategoryDescription(category.description, category.name)}
              </p>
              <Badge variant="outline" className="text-sm">
                {category.serverCount} servers
              </Badge>
            </div>
          </a>
        ))
      }
    </div>
  </div>

  {/* Bottom Pagination.. */}
  <div class="mt-8 pt-6 border-t border-slate-200 dark:border-slate-700">
    {/* Middle section with page numbers */}
    <div class="flex items-center justify-center gap-2 mb-4">
      {
        pageUrl?.prev ? (
          <a
            href={`${pageUrl.prev}/#pagination-info`}
            class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors"
          >
            ‚Üê Previous
          </a>
        ) : (
          <span class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-400 dark:text-slate-500 bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded cursor-not-allowed">
            ‚Üê Previous
          </span>
        )
      }

      {/* Page Numbers */}
      {
        pageUrl?.first && currentPage > 3 && (
          <>
            <a
              href={`${pageUrl.first}/#pagination-info`}
              class="px-3 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors"
            >
              1
            </a>
            <span class="px-2 text-slate-400">...</span>
          </>
        )
      }

      {
        Array.from({ length: Math.min(5, lastPage) }, (_, i) => {
          const pageNum =
            Math.max(1, Math.min(lastPage - 4, currentPage - 2)) + i;
          if (pageNum > lastPage) return null;

          const isCurrentPage = pageNum === currentPage;
          const pageUrl = `/freedevtools/mcp/${pageNum}/`;

          return (
            <a
              href={`${pageUrl}#pagination-info`}
              class={`px-3 py-2 text-sm font-medium rounded transition-colors ${
                isCurrentPage
                  ? 'text-white bg-blue-600 border border-blue-600'
                  : 'text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 hover:bg-slate-50 dark:hover:bg-slate-600'
              }`}
            >
              {pageNum}
            </a>
          );
        })
      }

      {
        pageUrl?.last && currentPage < lastPage - 2 && (
          <>
            <span class="px-2 text-slate-400">...</span>
            <a
              href={`${pageUrl.last}#pagination-info`}
              class="px-3 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors"
            >
              {lastPage}
            </a>
          </>
        )
      }

      {
        pageUrl?.next ? (
          <a
            href={`${pageUrl.next}/#pagination-info`}
            class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-600 dark:text-slate-400 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors"
          >
            Next ‚Üí
          </a>
        ) : (
          <span class="inline-flex items-center px-3 py-2 text-sm font-medium text-slate-400 dark:text-slate-500 bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded cursor-not-allowed">
            Next ‚Üí
          </span>
        )
      }
    </div>

    {/* Bottom section with info and go to page */}
    <div class="flex flex-col sm:flex-row items-center justify-center gap-4">
      <div class="text-sm text-slate-600 dark:text-slate-400">
        Page {currentPage} of {lastPage} ‚Ä¢ {categoriesCount} total categories
      </div>

      {/* Go to page input */}
      <div class="flex items-center gap-2">
        <span class="text-sm text-slate-600 dark:text-slate-400"
          >Go to page:</span
        >
        <input
          type="number"
          id="go-to-page-input"
          min="1"
          max={lastPage}
          value={currentPage}
          class="w-16 px-2 py-1 text-sm border border-slate-300 dark:border-slate-600 rounded bg-white dark:bg-slate-800 text-slate-900 dark:text-slate-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        />
        <button
          id="go-to-page-btn"
          class="px-3 py-1 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded transition-colors"
        >
          Go
        </button>
      </div>
    </div>
  </div>

  {/* Features */}
  <div class="mb-10 mt-6">
    <ToolContentCardWrapper>
      <Card className="p-6">
        <h2 class="text-xl font-semibold mb-6 text-center">
          Why Use Our MCP Directory?
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="text-center space-y-2">
            <svg
              class="h-8 w-8 text-blue-600 mx-auto"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"
              ></path>
            </svg>
            <h3 class="font-semibold">Smart Categories</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Browse organized categories to find the perfect MCP servers for
              your needs.
            </p>
          </div>
          <div class="text-center space-y-2">
            <svg
              class="h-8 w-8 text-green-600 mx-auto"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"
              ></path>
            </svg>
            <h3 class="font-semibold">Smart Filters</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Filter by category, license, platform, and more to find the
              perfect match.
            </p>
          </div>
          <div class="text-center space-y-2">
            <svg
              class="h-8 w-8 text-yellow-600 mx-auto"
              fill="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"
              ></path>
            </svg>
            <h3 class="font-semibold">Quality Scores</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              See security, license, and quality scores to make informed
              decisions.
            </p>
          </div>
        </div>
      </Card>
    </ToolContentCardWrapper>
  </div>

  {/* Credits Section */}
  <div class="mt-10 pt-6 mb-8 border-t border-slate-200 dark:border-slate-700">
    <div class="flex flex-wrap gap-4">
      <a
        href="/freedevtools/"
        class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors"
      >
        ‚Üê Back to Free DevTools
      </a>
      <CreditsButton href="/freedevtools/mcp/credits/" />
    </div>
  </div>
</ToolContainer>
