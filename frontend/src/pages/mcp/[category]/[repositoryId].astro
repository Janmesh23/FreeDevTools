---
import { getEntry } from 'astro:content';
import { marked } from 'marked';
import AdBanner from '../../../components/banner/AdBanner.astro';
import CreditsButton from '../../../components/buttons/CreditsButton';
import ToolContainer from '../../../components/tool/ToolContainer';
import ToolHead from '../../../components/tool/ToolHead';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { generateMcpStaticPaths } from '../../../lib/mcp-utils';
import { formatRepositoryName } from '../../../lib/utils';

function processMcpReadmeLinks(html: string): string {
  // First, add IDs to all headings (h1-h6) so anchor links work
  html = html.replace(
    /<(h[1-6])([^>]*)>([^<]+)<\/h[1-6]>/gi,
    (match, tag, attributes, content) => {
      // Generate anchor ID from heading content
      const anchorId = content
        .toLowerCase()
        .replace(/[^a-z0-9\s-]/g, '') // Remove special chars
        .replace(/\s+/g, '-') // Replace spaces with hyphens
        .replace(/-+/g, '-') // Replace multiple hyphens with single
        .replace(/^-|-$/g, ''); // Remove leading/trailing hyphens

      // Add scroll margin to offset the header - use both class and inline style
      const existingClass = attributes.includes('class=') ? attributes : '';
      const scrollMarginClass = existingClass
        ? existingClass.replace(/class="([^"]*)"/, 'class="$1 scroll-mt-32"')
        : 'class="scroll-mt-32"';

      // Add inline style as backup to ensure scroll margin works
      const existingStyle = attributes.includes('style=') ? attributes : '';
      const scrollMarginStyle = existingStyle
        ? existingStyle.replace(
            /style="([^"]*)"/,
            'style="$1; scroll-margin-top: 8rem;"'
          )
        : 'style="scroll-margin-top: 8rem;"';

      return `<${tag} ${scrollMarginClass} ${scrollMarginStyle} id="${anchorId}">${content}</${tag}>`;
    }
  );

  // Then process the links
  return html.replace(
    /<a\s+([^>]*?)href="([^"]*?)"([^>]*?)>/g,
    (
      match: string,
      beforeHref: string,
      href: string,
      afterHref: string
    ): string => {
      // Keep absolute URLs (https/http) as clickable links
      if (/^https?:\/\//i.test(href)) {
        // Add target="_blank" for external links
        if (!match.includes('target=')) {
          return `<a ${beforeHref}href="${href}"${afterHref} target="_blank" rel="noopener noreferrer">`;
        }
        return match;
      }

      // Handle anchor links (starting with #) - keep them as clickable for scrolling
      if (href.startsWith('#')) {
        return match;
      }

      // Disable all relative links (/, ../, ./, etc.) by removing href and adding disabled styling
      return `<span ${beforeHref}${afterHref}>`;
    }
  );
}

// Generate static paths for all MCP repositories using optimized utility
export async function getStaticPaths() {
  return await generateMcpStaticPaths();
}

// Get parameters
const { category, repositoryId } = Astro.params;

if (!category || !repositoryId) {
  throw new Error('Category and repositoryId parameters are required');
}

// Use getEntry for direct access instead of getCollection + find
// This is more efficient as it directly accesses the specific category file
const categoryEntry = await getEntry('mcpCategoryData', category);

if (!categoryEntry) {
  throw new Error(`Category '${category}' not found`);
}

const categoryData = categoryEntry.data;
const categoryName = categoryData.categoryDisplay;

// Find the specific repository
const server = categoryData.repositories[repositoryId];
if (!server) {
  throw new Error(
    `Repository '${repositoryId}' not found in category '${category}'`
  );
}

// Format repository name
const formattedName = formatRepositoryName(server.name);

// Process README content
let processedReadmeContent: string = '';
if (server.readme_content) {
  try {
    // Convert markdown to HTML
    let htmlContent = await marked(server.readme_content);

    // Process links: keep absolute URLs and anchor links, disable relative links
    processedReadmeContent = processMcpReadmeLinks(htmlContent);
  } catch (error) {
    console.warn('Error processing README content:', error);
    processedReadmeContent = server.readme_content;
  }
}

// Calculate stats
const stats = {
  githubStars: server.stars,
  weeklyDownloads: server.npm_downloads || 0,
  tools: 1, // This would need to be calculated from actual data
  lastUpdated: new Date(server.updated_at).toLocaleDateString(),
};

// SEO data
const title = `${formattedName} – ${categoryName} MCP Server by ${server.owner.charAt(0).toUpperCase() + server.owner.slice(1)} Model Context Protocol Tool | Free DevTools by Hexmos`;

const description =
  server.description ||
  `${server.owner.charAt(0).toUpperCase() + server.owner.slice(1)}'s ${formattedName} MCP server helps your AI generate more accurate and context-aware responses. Supported in Copilot Agent, Cursor, Claude Code, Windsurf, and Cline – free, open source, and ready to integrate.`;

let keywords = ['MCP', 'Model Context Protocol', formattedName, categoryName];

if (server.keywords && server.keywords.length > 0) {
  keywords = [...keywords, ...server.keywords];
}

// Breadcrumb data
const breadcrumbItems = [
  { label: 'Free DevTools', href: '/freedevtools/' },
  { label: 'MCP Directory', href: '/freedevtools/mcp/1/' },
  { label: categoryName, href: `/freedevtools/mcp/${category}/1/` },
  { label: formattedName },
];
---

<BaseLayout
  name={formattedName}
  title={title}
  path={`/freedevtools/mcp/${category}/${repositoryId}/`}
  description={description}
  canonical={`https://hexmos.com/freedevtools/mcp/${category}/${repositoryId}/`}
  keywords={keywords}
  ogImage="https://hexmos.com/freedevtools/tool-banners/mcp-directory-banner.png"
  twitterImage="https://hexmos.com/freedevtools/tool-banners/mcp-directory-banner.png"
  datePublished="2025-01-30"
  softwareVersion="1.0.0"
  features={[
    `MCP Repository: ${formattedName}`,
    `License: ${server.license}`,
    `GitHub Stars: ${stats.githubStars}`,
    'Detailed documentation and usage examples',
  ]}
  githubUrl={server.url}
>
  <ToolContainer>
    <div class="mb-16 mt-[74px]">
      <AdBanner />
    </div>
    <ToolHead
      name={formattedName}
      description={server.description || ''}
      breadcrumbItems={breadcrumbItems}
    />
    <!-- Repository Details -->
    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6 mt-6">
      <!-- Sidebar - Show first on mobile -->
      <div class="lg:order-2 space-y-6 sticky top-6 self-start">
        <!-- Author -->
        <div
          class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-0 rounded-lg p-4"
        >
          <h2 class="mb-3">Author</h2>
          <div class="flex items-center space-x-3">
            <div class="flex-shrink-0">
              {
                server.imageUrl ? (
                  <img
                    src={server.imageUrl}
                    alt={`${formattedName} logo`}
                    class="w-12 h-12 rounded-lg object-cover border border-slate-200 dark:border-slate-700"
                  />
                ) : (
                  <div class="w-12 h-12 rounded-lg bg-slate-100 dark:bg-slate-800 border border-slate-200 dark:border-slate-700 flex items-center justify-center">
                    <img
                      src="/freedevtools/svg_icons/automation/mcp-server-stroke-rounded.svg"
                      alt="MCP Server"
                      class="w-8 h-8 text-slate-400"
                    />
                  </div>
                )
              }
            </div>
            <div class="flex-1">
              <h4
                class="text-sm font-semibold text-gray-900 dark:text-gray-100"
              >
                {server.owner || 'Unknown Author'}
              </h4>
              <div
                class="mt-1 flex items-center space-x-1 text-xs text-gray-500 dark:text-gray-400"
              >
                <svg
                  class="w-3 h-3 text-gray-900 dark:text-gray-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3-1m-3 1l-6-2m0-2v2m0 16V5m0 16H9m3 0h3"
                  ></path>
                </svg>
                <span>{server.license}</span>
              </div>
            </div>
          </div>
        </div>

        <!-- Quick Info -->
        <div
          class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-0 rounded-lg p-4"
        >
          <h2 class="mb-3">Quick Info</h2>
          <div class="space-y-2">
            <div class="flex justify-between items-center">
              <span
                class="text-gray-600 dark:text-gray-400 flex items-center space-x-1 text-xs"
              >
                <img
                  src="/freedevtools/svg_icons/github/github-svgrepo-com.svg"
                  alt="GitHub"
                  class="w-3 h-3 text-gray-900 dark:brightness-0 dark:invert"
                />
                <span class="text-xs">GitHub Stars</span>
              </span>
              <span class="font-medium flex items-center space-x-1 text-xs">
                <svg
                  class="w-3 h-3 text-gray-900 dark:text-gray-400"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"
                  ></path>
                </svg>
                <span class="text-xs">{stats.githubStars}</span>
              </span>
            </div>
            <div class="flex justify-between items-center">
              <span
                class="text-gray-600 dark:text-gray-400 flex items-center space-x-1 text-xs"
              >
                <img
                  src="/freedevtools/svg_icons/github/npm-svgrepo-com.svg"
                  alt="NPM"
                  class="w-3 h-3 text-gray-900 dark:brightness-0 dark:invert"
                />
                <span class="text-xs">Weekly Downloads</span>
              </span>
              <span class="font-medium flex items-center space-x-1 text-xs">
                <svg
                  class="w-3 h-3 text-gray-900 dark:text-gray-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                  ></path>
                </svg>
                <span class="text-xs">{stats.weeklyDownloads}</span>
              </span>
            </div>
            <div class="flex justify-between items-center">
              <span
                class="text-gray-600 dark:text-gray-400 flex items-center space-x-1 text-xs"
              >
                <svg
                  class="w-3 h-3 text-gray-900 dark:text-gray-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
                  ></path>
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
                <span class="text-xs">Tools</span>
              </span>
              <span class="font-medium text-xs">{stats.tools}</span>
            </div>
            <div class="flex justify-between items-center">
              <span
                class="text-gray-600 dark:text-gray-400 flex items-center space-x-1 text-xs"
              >
                <svg
                  class="w-3 h-3 text-gray-900 dark:text-gray-400"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span class="text-xs">Last Updated</span>
              </span>
              <span class="font-medium text-xs">{stats.lastUpdated}</span>
            </div>
          </div>
        </div>

        <!-- Actions -->
        <div
          class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-0 rounded-lg p-6"
        >
          <h2 class="mb-4">Actions</h2>
          <div class="space-y-3">
            <a
              href={server.url}
              target="_blank"
              rel="noopener noreferrer"
              class="w-full flex items-center justify-center space-x-2 px-4 py-2 bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 rounded-lg hover:bg-gray-800 dark:hover:bg-gray-200 transition-colors"
            >
              <img
                src="/freedevtools/svg_icons/github/github-svgrepo-com.svg"
                alt="GitHub"
                class="w-4 h-4 filter brightness-0 invert dark:brightness-100 dark:invert-0"
              />
              <span>View on GitHub</span>
            </a>
            {
              server.npm_url && (
                <a
                  href={server.npm_url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="w-full flex items-center justify-center space-x-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
                >
                  <img
                    src="/freedevtools/svg_icons/github/npm-svgrepo-com.svg"
                    alt="NPM"
                    class="w-4 h-4"
                  />
                  <span>View on NPM</span>
                </a>
              )
            }
          </div>
        </div>

        <!-- Tags -->
        {
          server.keywords && server.keywords.length > 0 && (
            <div class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-0 rounded-lg p-6">
              <h2 class="mb-4">Tags</h2>
              <div class="flex flex-wrap gap-2">
                {server.keywords.map((keyword) => (
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400 border border-blue-200 dark:border-blue-800">
                    {keyword}
                  </span>
                ))}
              </div>
            </div>
          )
        }
      </div>

      <!-- Main Content -->
      <div class="lg:col-span-3 lg:order-1">
        {
          server.readme_content ? (
            <div class="bg-slate-50 dark:bg-slate-800/50 rounded-lg p-6">
              <div class="prose prose-slate dark:prose-invert max-w-none prose-headings:text-slate-900 dark:prose-headings:text-slate-100 prose-p:text-slate-700 dark:prose-p:text-slate-300 prose-code:text-blue-600 dark:prose-code:text-blue-400 prose-code:bg-slate-100 dark:prose-code:bg-slate-700 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-pre:bg-slate-100 dark:prose-pre:bg-slate-800 prose-pre:border prose-pre:border-slate-200 dark:prose-pre:border-slate-600 prose-blockquote:border-l-blue-500 prose-blockquote:bg-slate-100 dark:prose-blockquote:bg-slate-700 prose-blockquote:px-4 prose-blockquote:py-2 prose-blockquote:rounded prose-ul:space-y-1 prose-li:text-slate-700 dark:prose-li:text-slate-300">
                <div set:html={processedReadmeContent} />
              </div>
            </div>
          ) : (
            <div class="text-center py-12">
              <div class="text-6xl mb-4">📝</div>
              <h2 class=" mb-2">No documentation available</h2>
              <p class="text-gray-600 dark:text-gray-400">
                This repository doesn't have README content available yet.
              </p>
            </div>
          )
        }
      </div>
    </div>

    <!-- Credits Section -->
    <div
      class="mt-10 pt-6 mb-8 border-t border-slate-200 dark:border-slate-700"
    >
      <div class="flex flex-wrap gap-4">
        <a
          href={`/freedevtools/mcp/${category}/1/`}
          class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors"
        >
          ← Back to {categoryName}
        </a>
        <CreditsButton href="/freedevtools/mcp/credits/" />
      </div>
    </div>
  </ToolContainer>
</BaseLayout>

