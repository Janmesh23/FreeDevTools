---
import CreditsButton from '@/components/buttons/CreditsButton';
import Pagination from '@/components/PaginationComponent.astro';
import ToolContainer from '@/components/tool/ToolContainer';
import ToolContentCardWrapper from '@/components/tool/ToolContentCardWrapper';
import ToolHead from '@/components/tool/ToolHead';
import { Card } from '@/components/ui/card';
import { formatNumber } from '@/lib/utils';
import { Download, Filter, Star } from 'lucide-react';

// Helper function to get platform emoji..
const getPlatformEmoji = (platformName: string): string => {
  const emojiMap: Record<string, string> = {
    android: 'üì±',
    aws: '‚òÅÔ∏è',
    bash: 'üêö',
    common: 'üîß',
    git: 'üì¶',
    linux: 'üêß',
    macos: 'üçé',
    node: 'üü¢',
    python: 'üêç',
    windows: 'ü™ü',
    docker: 'üê≥',
    kubernetes: '‚ò∏Ô∏è',
    terraform: 'üèóÔ∏è',
    npm: 'üì¶',
    yarn: 'üß∂',
    pnpm: 'üì¶',
    go: 'üêπ',
    rust: 'ü¶Ä',
    php: 'üêò',
    ruby: 'üíé',
    java: '‚òï',
    csharp: 'üî∑',
    cpp: '‚ö°',
    c: '‚ö°',
    swift: 'ü¶â',
    kotlin: 'üü£',
    scala: 'üî¥',
    clojure: 'üü¢',
    haskell: 'üî∑',
    ocaml: 'üü†',
    fsharp: 'üîµ',
    elixir: 'üíú',
    erlang: 'üî¥',
    lua: 'üîµ',
    perl: 'üê™',
    r: 'üìä',
    matlab: 'üßÆ',
    julia: 'üî¥',
    dart: 'üéØ',
    flutter: 'ü¶ã',
    react: '‚öõÔ∏è',
    vue: 'üíö',
    angular: 'üÖ∞Ô∏è',
    svelte: 'üß°',
    next: '‚ñ≤',
    nuxt: 'üíö',
    gatsby: 'üåê',
    webpack: 'üì¶',
    vite: '‚ö°',
    rollup: 'üì¶',
    parcel: 'üì¶',
    babel: 'üîß',
    typescript: 'üî∑',
    javascript: 'üü®',
    html: 'üåê',
    css: 'üé®',
    sass: 'üíÖ',
    less: 'üî∑',
    stylus: 'üíÑ',
    postcss: 'üîß',
    tailwind: 'üé®',
    bootstrap: 'üé®',
    material: 'üé®',
    antd: 'üé®',
    chakra: 'üé®',
    mantine: 'üé®',
    semantic: 'üé®',
    bulma: 'üé®',
    foundation: 'üé®',
    pure: 'üé®',
    skeleton: 'üé®',
    milligram: 'üé®',
    spectre: 'üé®',
    uikit: 'üé®',
    materialize: 'üé®',
    vuetify: 'üé®',
    quasar: 'üé®',
    prime: 'üé®',
    element: 'üé®',
    iview: 'üé®',
    naive: 'üé®',
    arco: 'üé®',
    tdesign: 'üé®',
    nutui: 'üé®',
    vant: 'üé®',
    mint: 'üé®',
    cube: 'üé®',
    mand: 'üé®',
    weui: 'üé®',
    jquery: 'üé®',
    lodash: 'üîß',
    moment: 'üìÖ',
    dayjs: 'üìÖ',
    'date-fns': 'üìÖ',
    luxon: 'üìÖ',
    ramda: 'üîß',
    underscore: 'üîß',
    immutable: 'üîß',
    mobx: 'üîß',
    redux: 'üîß',
    vuex: 'üîß',
    pinia: 'üîß',
    zustand: 'üîß',
    jotai: 'üîß',
    recoil: 'üîß',
    swr: 'üîß',
    'react-query': 'üîß',
    apollo: 'üîß',
    graphql: 'üîß',
    prisma: 'üîß',
    sequelize: 'üîß',
    mongoose: 'üîß',
    typeorm: 'üîß',
    knex: 'üîß',
    bookshelf: 'üîß',
    waterline: 'üîß',
    sails: 'üîß',
    loopback: 'üîß',
    feathers: 'üîß',
    hapi: 'üîß',
    fastify: 'üîß',
    koa: 'üîß',
    express: 'üîß',
    connect: 'üîß',
    restify: 'üîß',
    polka: 'üîß',
    micro: 'üîß',
    vercel: 'üîß',
    netlify: 'üîß',
    heroku: 'üîß',
    railway: 'üîß',
    render: 'üîß',
    fly: 'üîß',
    digitalocean: '‚òÅÔ∏è',
    linode: '‚òÅÔ∏è',
    vultr: '‚òÅÔ∏è',
    azure: '‚òÅÔ∏è',
    gcp: '‚òÅÔ∏è',
    ibm: '‚òÅÔ∏è',
    oracle: '‚òÅÔ∏è',
    alibaba: '‚òÅÔ∏è',
    tencent: '‚òÅÔ∏è',
    baidu: '‚òÅÔ∏è',
    huawei: '‚òÅÔ∏è',
    rackspace: '‚òÅÔ∏è',
    joyent: '‚òÅÔ∏è',
    softlayer: '‚òÅÔ∏è',
    ovh: '‚òÅÔ∏è',
    scaleway: '‚òÅÔ∏è',
    hetzner: '‚òÅÔ∏è',
    contabo: '‚òÅÔ∏è',
  };

  return emojiMap[platformName.toLowerCase()] || 'üîß';
};

// Helper function to render platform card
function renderPlatformCard(platform: any, platformCommands: any[]): string {
  const commandsHtml = platformCommands
    .slice(0, 3)
    .map(
      (command) =>
        `<a href="/freedevtools/tldr/${platform.name}/${command.name}/" class="block text-sm text-blue-600 dark:text-blue-300 hover:text-black dark:hover:text-white hover:font-bold">${command.name}</a>`
    )
    .join('');

  const moreCommandsHtml =
    platformCommands.length > 3
      ? `<p class="text-xs text-slate-500 dark:text-slate-400">+${platformCommands.length - 3} more commands</p>`
      : '';

  return `
    <div class="bg-white dark:bg-slate-900 border border-slate-200 dark:border-slate-900 rounded-xl p-4 md:p-4 lg:p-8 transition-all duration-300 ease-in-out shadow-sm hover:-translate-y-1 hover:shadow-xl hover:border-border">
      <div class="flex items-center mb-4">
        <div class="w-10 h-10 bg-white dark:bg-slate-800 rounded-lg flex items-center justify-center mr-3 border border-slate-200 dark:border-slate-700">
          <div class="text-2xl">
            ${getPlatformEmoji(platform.name)}
          </div>
        </div>
        <a 
          href="${platform.url}"
          class="text-xl font-semibold text-black dark:text-neon-light capitalize hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
        >
          ${platform.name.replace('-', ' ')}
        </a>
      </div>
      
      
      <div class="space-y-2">
        ${commandsHtml}
        ${moreCommandsHtml}
      </div>
      
      <div class="mt-4 pt-4 border-t border-slate-200 dark:border-slate-900">
        <a 
          href="${platform.url}"
          class="text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300"
        >
          View all ${platform.name} commands ‚Üí
        </a>
      </div>
    </div>
  `;
}

const {
  platforms,
  currentPage,
  totalPages,
  totalPlatforms,
  totalCommands,
  breadcrumbItems,
} = Astro.props;

// Get commands for each platform
import AdBanner from '../../components/banner/AdBanner.astro';
import { getTldrPlatformCommands } from '../../lib/tldr-utils';

const platformsWithCommands = await Promise.all(
  platforms.map(async (platform: any) => {
    const commands = await getTldrPlatformCommands(platform.name);
    return { ...platform, commands };
  })
);
---

<ToolContainer>
  <div class="mb-16 mt-[74px]">
    <AdBanner />
  </div>
  <ToolHead
    name="TLDR"
    description="Comprehensive documentation for command-line tools across different platforms. Learn commands quickly with practical examples."
    breadcrumbItems={breadcrumbItems}
  />

  <!-- Overview Stats -->
  <div id="pagination-info" class="text-center">
    <div class="grid grid-cols-2 gap-6 mt-8">
      <div class="text-center">
        <div class="text-3xl font-bold text-blue-600">{totalPlatforms}</div>
        <div class="text-sm text-gray-600 dark:text-gray-400">Platforms</div>
      </div>
      <div class="text-center">
        <div class="text-3xl font-bold text-green-600">
          {formatNumber(totalCommands)}
        </div>
        <div class="text-sm text-gray-600 dark:text-gray-400">Commands</div>
      </div>
    </div>
  </div>

  <!-- Pagination Info -->
  <div class="bg-slate-50 dark:bg-slate-800 rounded-lg p-4 mb-6 mt-8">
    <div class="text-sm text-slate-600 dark:text-slate-400 text-center">
      Showing {platforms.length} of {totalPlatforms} platforms (Page {
        currentPage
      } of {totalPages})
    </div>
  </div>

  <!-- Platforms Grid -->
  <div class="mt-10 mb-6">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {
        platformsWithCommands.map((platform: any) => (
          <Fragment
            set:html={renderPlatformCard(platform, platform.commands)}
          />
        ))
      }
    </div>
  </div>

  <!-- Pagination -->
  <Pagination
    currentPage={currentPage}
    totalPages={totalPages}
    baseUrl="/freedevtools/tldr/"
  />

  <!-- Features -->
  <div class="mb-10 mt-6">
    <ToolContentCardWrapper>
      <Card className="p-6">
        <h2 class="text-xl font-semibold mb-6 text-center">
          Why Use Our TLDR?
        </h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="text-center space-y-2">
            <Download className="h-8 w-8 text-blue-600 mx-auto" />
            <h3 class="font-semibold">Quick Reference</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Get command examples and usage instantly without reading full
              documentation.
            </p>
          </div>
          <div class="text-center space-y-2">
            <Filter className="h-8 w-8 text-green-600 mx-auto" />
            <h3 class="font-semibold">Platform Specific</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Commands organized by platform for easy navigation and learning.
            </p>
          </div>
          <div class="text-center space-y-2">
            <Star className="h-8 w-8 text-yellow-600 mx-auto" />
            <h3 class="font-semibold">Practical Examples</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">
              Real-world examples that you can copy and use immediately.
            </p>
          </div>
        </div>
      </Card>
    </ToolContentCardWrapper>
  </div>

  <!-- Credits Section -->
  <div class="mt-10 pt-6 mb-8 border-t border-slate-200 dark:border-slate-700">
    <div class="flex flex-wrap gap-4">
      <a
        href="/freedevtools/"
        class="inline-flex items-center px-4 py-2 text-sm font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors"
      >
        ‚Üê Back to Free DevTools
      </a>
      <CreditsButton href="/freedevtools/tldr/credits/" />
    </div>
  </div>
</ToolContainer>
